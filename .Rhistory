## =>> CREACIÓN DE SECUENCIAS
sec <- 1:10
sec
sec2 <- -5:5
sec2
y <- seq(from=2, to=10, lenght=6)
y <- seq(from=2, to=10, length=6)
y
y <- seq(from=2, to=10, length=4)
y
# Creacion de secuencias con la funcion REP
x <- rep(1:4,4)
x
x <- rep("hello", 5)
x
?rep
rep("hello", each=2)
x <- rep(1:4, c(2,1,2,1))
x
## =>> REFERENCIA A LOS SUBCONJUNTOS
x <- seq(1,15,2)
x
x[1:3]
x[2:5]
class(x)
class(x[2:5])
y[c(1:3)]
y <- list("Hello", "Planet", "Earth!")
y[c(1:3)]
class(y[c(1,3)])
# Con operador [[
y <- list("Hello", "Planet", "Earth!")
pos <- c(1,2)
y[pos]
# Con operador [[
y <- list("Hello", "Planet", "Earth!")
y[[1]]
class(y[[1]])
Y[[c(1,3)]]
y[[c(1,3)]]
y <- list(age=c(18, 20, 28), height=c(1.60, 1.72, 1.79))
y
class(y)
y$age
class(y$age)
x <- matrix(1:9, nrow = 3, ncol = 3, byrow = TRUE)
x
class(x[1,1])
class(x[1,1, drop = FALSE])
y <- list(age=c(15, 19, 20), height=c(1.60, 1.68, 1.76))
y[["age"]]
y <- list(age=c(15, 19, 20), height=c(1.60, 1.68, 1.76))
y[["age"]]
y[["a", exact=FALSE]]
# Extraer NA
y <- c(15, 22, 45, NA, NA, 51)
y
i <- is.na(y)
i
y[!i]
## =>> VECTORIZACIÓN
x <- rnorm(10000000)
x
z <- vector(mode = "numeric", length = 10000000)
y <- rnorm(10000000)
z
start <- proc.time()
for (i in 1:10000000){
z[i] <- x[i] + y[i]
}
proc.time()-start()
x <- rnorm(10000000)
y <- rnorm(10000000)
z <- vector(mode = "numeric", length = 10000000)
# Iteración
start <- proc.time()
for (i in 1:10000000){
z[i] <- x[i] + y[i]
}
proc.time()-start()
start <- proc.time()
for (i in 1:10000000){
z[i] <- x[i] + y[i]
}
proc.time()-start()
x <- rnorm(10000000)
y <- rnorm(10000000)
z <- vector(mode = "numeric", length = 10000000)
start <- proc.time()
for (i in 1:10000000){
z[i] <- x[i] + y[i]
}
proc.time()-start()
?proc.time
?start
library(stats)
start <- proc.time()
for (i in 1:10000000){
z[i] <- x[i] + y[i]
}
proc.time()-start()
x
x <- rnorm(10000000)
y <- rnorm(10000000)
z <- vector(mode = "numeric", length = 10000000)
x
start <- proc.time()
for (i in 1:10000000){
z[i] <- x[i] + y[i]
}
proc.time()-start()
start <- proc.time()
for (i in 1:10000000){
z[i] <- x[i]+y[i]
}
proc.time()-start()
for (i in 1:10000000){
z[i] <- x[i]+y[i]
}
proc.time() - start()
proc.time() - start
